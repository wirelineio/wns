name: WNS multi-arch

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: make install
      run: |
        mkdir -p `pwd`/go/bin
        export GOPATH="`pwd`/go"
        export PATH="$PATH:$GOBIN"
        export GO111MODULE=on
        export GOOS="linux"
        mkdir dist
        
        export GOARCH="amd64"
        rm -rf build
        make install
        mkdir -p build/bin/
        mv go/bin/* build/bin/
        cp -r scripts devnet README.md build/
        (cd build && zip -r ../dist/wns-linux-x64.zip .)
        HASH=$(curl -s -D - -XPOST --data-binary @./dist/wns-linux-x64.zip https://signal1.dxos.network/ipfs/dxos/gateway/ | grep '^Ipfs-Hash' | awk '{ print $2 }')
        echo "::set-output name=ipfs_x64::${HASH}"
        
        echo "$HASH"

        export GOARCH="arm64"
        rm -rf build
        make install
        mkdir -p build/bin/
        mv go/bin/linux_arm64/* build/bin/
        cp -r scripts devnet README.md build/
        (cd build && zip -r ../dist/wns-linux-arm64.zip .)
        HASH=$(curl -s -D - -XPOST --data-binary @./dist/wns-linux-arm64.zip https://signal1.dxos.network/ipfs/dxos/gateway/ | grep '^Ipfs-Hash' | awk '{ print $2 }')
        echo "::set-output name=ipfs_arm64::${HASH}"
        
        echo "$HASH"
    - name: Archive x64 artifacts
      uses: actions/upload-artifact@v1
      with:
        name: wns-linux-x64.zip
        path: dist/wns-linux-x64.zip
    - name: Archive arm64 artifacts
      uses: actions/upload-artifact@v1
      with:
        name: wns-linux-arm64.zip
        path: dist/wns-linux-x64.zip
